{"version":3,"file":"index.js","sources":["../src/browser.js","../src/dom.js","../src/domcoords.js","../src/viewdesc.js","../src/capturekeys.js","../src/trackmappings.js","../src/selection.js","../src/domchange.js","../src/clipboard.js","../src/domobserver.js","../src/input.js","../src/decoration.js","../src/index.js"],"sourcesContent":["const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  result.mac = /Mac/.test(navigator.platform)\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/\\d/i.test(navigator.userAgent)\n  result.chrome = !ie && /Chrome\\//.test(navigator.userAgent)\n  result.ios = !ie && /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent)\n  result.webkit = !ie && 'WebkitAppearance' in document.documentElement.style\n}\n","import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nexport const textRange = function(node, from, to) {\n  let range = document.createRange()\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName)) return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nfunction nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction hasBlockDesc(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n","import {textRange, parentNode} from \"./dom\"\n\nfunction windowRect(win) {\n  return {left: 0, right: win.innerWidth,\n          top: 0, bottom: win.innerHeight}\n}\n\nexport function scrollRectIntoView(view, rect) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\")\n  let doc = view.dom.ownerDocument, win = doc.defaultView\n  if (scrollMargin == null) scrollMargin = 5\n  for (let parent = view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    let atBody = parent == doc.body\n    let bounding = atBody ? windowRect(win) : parent.getBoundingClientRect()\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + scrollThreshold)\n      moveY = -(bounding.top - rect.top + scrollMargin)\n    else if (rect.bottom > bounding.bottom - scrollThreshold)\n      moveY = rect.bottom - bounding.bottom + scrollMargin\n    if (rect.left < bounding.left + scrollThreshold)\n      moveX = -(bounding.left - rect.left + scrollMargin)\n    else if (rect.right > bounding.right - scrollThreshold)\n      moveX = rect.right - bounding.right + scrollMargin\n    if (moveX || moveY) {\n      if (atBody) {\n        win.scrollBy(moveX, moveY)\n      } else {\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n      }\n    }\n    if (atBody) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let doc = view.dom.ownerDocument\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  let stack = []\n  for (let dom = view.dom; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc.body) break\n  }\n  return {refDOM, refTop, stack}\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  let dTop = newRefTop == 0 ? 0 : newRefTop - refTop\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (rect.left - 1 <= coords.left && rect.right + 1 >= coords.left &&\n        rect.top - 1 <= coords.top && rect.bottom + 1 >= coords.top)\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  if (!view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) return null\n\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let root = view.root, node, offset\n  if (root.caretPositionFromPoint) {\n    let pos = root.caretPositionFromPoint(coords.left, coords.top)\n    if (pos) ({offsetNode: node, offset} = pos)\n  }\n  if (!node && root.caretRangeFromPoint) {\n    let range = root.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = root.elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt) return null\n  elt = targetKludge(elt, coords)\n  if (node) {\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately places\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) {\n    pos = posFromElement(view, elt, coords)\n    if (pos == null) return null\n  }\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\n// : (EditorView, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos)\n  let side, rect\n  if (node.nodeType == 3) {\n    if (offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset, offset + 1), -1)\n      side = \"left\"\n    }\n    if ((!rect || rect.left == rect.right) && offset) {\n      rect = singleRect(textRange(node, offset - 1, offset), 1)\n      side = \"right\"\n    }\n  } else if (node.firstChild) {\n    if (offset < node.childNodes.length) {\n      let child = node.childNodes[offset]\n      rect = singleRect(child.nodeType == 3 ? textRange(child) : child, -1)\n      side = \"left\"\n    }\n    if ((!rect || rect.top == rect.bottom) && offset) {\n      let child = node.childNodes[offset - 1]\n      rect = singleRect(child.nodeType == 3 ? textRange(child) : child, 1)\n      side = \"right\"\n    }\n  } else {\n    rect = node.getBoundingClientRect()\n    side = \"left\"\n  }\n  let x = rect[side]\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state || !view.inDOMChange) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$anchor.min(sel.$head) : sel.$anchor.max(sel.$head)\n  if (!$pos.depth) return false\n  return withFlushedState(view, state, () => {\n    let dom = view.docView.domAfterPos($pos.before())\n    let coords = coordsAtPos(view, $pos.pos)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top && (dir == \"up\" ? box.bottom < coords.top + 1 : box.top > coords.bottom - 1))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock || !$head.depth) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = view.docView.domAfterPos($head.before())\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n","import {DOMSerializer, Fragment} from \"prosemirror-model\"\n\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration]) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), and an\n//   array of active decorations (which are automatically drawn, and\n//   the node view may ignore if it isn't interested in them), and\n//   should return true if it was able to update to that node, and\n//   false otherwise. If the node view has a `contentDOM` property (or\n//   no `dom` property), updating its child nodes will be handled by\n//   ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   happens within the view. Return false if the editor should\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed.\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack() { return false }\n\n  get beforePosition() { return false }\n\n  // : () → ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) → bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) → number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM && !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom) : desc.nodeDOM == dom)) first = false\n        else return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom;; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n  }\n\n  // : (number) → ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number) → {node: dom.Node, offset: number}\n  domFromPos(pos) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    for (let offset = 0, i = 0;; i++) {\n      if (offset == pos) {\n        while (i < this.children.length && this.children[i].beforePosition) i++\n        return {node: this.contentDOM, offset: i}\n      }\n      if (i == this.children.length) throw new Error(\"Invalid position \" + pos)\n      let child = this.children[i], end = offset + child.size\n      if (pos < end) return child.domFromPos(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = 0, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from - childBase, to - childBase, base + childBase)\n\n        from = base + offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && to <= end) {\n        to = base + end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) → dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor), headDOM = this.domFromPos(head)\n    let domSel = root.getSelection(), range = document.createRange()\n    if (isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    if (domSel.extend) {\n      range.setEnd(anchorDOM.node, anchorDOM.offset)\n      range.collapse(false)\n    } else {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n    }\n    domSel.removeAllRanges()\n    domSel.addRange(range)\n    if (domSel.extend)\n      domSel.extend(headDOM.node, headDOM.offset)\n  }\n\n  // : (dom.MutationRecord) → bool\n  ignoreMutation(_mutation) {\n    return !this.contentDOM\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside && child.contentLost) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget) {\n    super(parent, nothing, widget.type.widget, null)\n    this.widget = widget\n  }\n\n  get beforePosition() {\n    return this.widget.type.side < 0\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n}\n\n// A cursor wrapper is used to put the cursor in when newly typed text\n// needs to be styled differently from its surrounding text (for\n// example through storedMarks), so that the style of the text doesn't\n// visually 'pop' between typing it and actually updating the view.\nclass CursorWrapperDesc extends WidgetViewDesc {\n  parseRule() {\n    let content\n    for (let child = this.dom.firstChild; child; child = child.nextSibling) {\n      let add\n      if (child.nodeType == 3) {\n        let text = child.nodeValue.replace(/\\ufeff/g, \"\")\n        if (!text) continue\n        add = document.createTextNode(text)\n      } else if (child.textContent == \"\\ufeff\") {\n        continue\n      } else {\n        add = child.cloneNode(true)\n      }\n      if (!content) content = document.createDocumentFragment()\n      content.appendChild(add)\n    }\n    if (content) return {skip: content}\n    else return super.parseRule()\n  }\n\n  ignoreMutation() { return false }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom) {\n    super(parent, [], dom, dom)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = customNodeViews(view)[mark.type.name]\n    let spec = custom && custom(mark, view)\n    let dom = spec && spec.dom || DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline)).dom\n    return new MarkViewDesc(parent, mark, dom)\n  }\n\n  parseRule() { return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM} }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSet, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finnicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view) {\n    let custom = customNodeViews(view)[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (descObj && descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText) {\n      dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view)\n  }\n\n  parseRule() {\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    if (this.contentDOM && !this.contentLost)\n      return {node: this.node.type.name, attrs: this.node.attrs, contentElement: this.contentDOM}\n    else\n      return {node: this.node.type.name, attrs: this.node.attrs, getContent: () => this.contentDOM ? Fragment.empty : this.node.content}\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view) {\n    let updater = new ViewTreeUpdater(this), inline = this.node.inlineContent\n    iterDeco(this.node, this.innerDeco, widget => {\n      if (widget.spec.isCursorWrapper)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Either find an existing desc that exactly matches this node,\n      // and drop the descs before it.\n      updater.findNodeMatch(child, outerDeco, innerDeco, i) ||\n        // Or try updating the next desc to reflect this node.\n        updater.updateNextNode(child, outerDeco, innerDeco, view, i) ||\n        // Or just add it as a new desc.\n        updater.addNode(child, outerDeco, innerDeco, view)\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) this.renderChildren()\n  }\n\n  renderChildren() {\n    renderDescs(this.contentDOM, this.children, NodeViewDesc.is)\n    if (browser.ios) iosHacks(this.dom)\n  }\n\n  // : (Node, [Decoration], DecorationSet, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n  }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc, true)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let parent = this.nodeDOM.parentNode\n    return parent ? {skip: parent} : {ignore: true}\n  }\n\n  update(node, outerDeco) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue)\n      this.nodeDOM.nodeValue = node.text\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\"\n  }\n}\n\n// A dummy desc used to tag trailing BR or span nodes created to work\n// around contentEditable terribleness.\nclass BRHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack() { return this.dirty == NOT_DIRTY }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSet, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, this.contentDOM ? this.innerDeco : innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root) : super.setSelection(anchor, head, root)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs) {\n  let dom = parentDOM.firstChild\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) dom = rm(dom)\n      dom = dom.nextSibling\n    } else {\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) dom = rm(dom)\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs, cur = top\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(cur = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(cur = top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") cur.class = (cur.class ? cur.class + \" \" : \"\") + val\n      else if (name == \"style\") cur.style = (cur.style ? cur.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") cur[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = nodeDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.appendChild(curDOM)\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \") : nothing\n    let curList = cur.class ? cur.class.split(\" \") : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style[m[1].toLowerCase()] = \"\"\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top) {\n    this.top = top\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    this.preMatched = preMatch(top.node.content, top.children)\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length), next\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]))\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      if (this.index < this.top.children.length &&\n          (next = this.top.children[this.index]).matchesMark(marks[depth])) {\n        this.top = next\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSet) → bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    for (let i = this.index, children = this.top.children, e = Math.min(children.length, i + 5); i < e; i++) {\n      let child = children[i], preMatched\n      if (child.matchesNode(node, outerDeco, innerDeco) &&\n          ((preMatched = this.preMatched.indexOf(child)) == -1 || preMatched == index)) {\n        this.destroyBetween(this.index, i)\n        this.index++\n        return true\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSet, EditorView, Fragment, number) → bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    if (this.index == this.top.children.length) return false\n    let next = this.top.children[this.index]\n    if (next instanceof NodeViewDesc) {\n      let preMatch = this.preMatched.indexOf(next)\n      if (preMatch > -1 && preMatch != index) return false\n      let nextDOM = next.dom\n      if (next.update(node, outerDeco, innerDeco, view)) {\n        if (next.dom != nextDOM) this.changed = true\n        this.index++\n        return true\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSet, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view))\n    this.changed = true\n  }\n\n  placeWidget(widget) {\n    if (this.index < this.top.children.length && this.top.children[this.index].matchesWidget(widget)) {\n      this.index++\n    } else {\n      let desc = new (widget.spec.isCursorWrapper ? CursorWrapperDesc : WidgetViewDesc)(this.top, widget)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1]\n    while (lastChild instanceof MarkViewDesc) lastChild = lastChild.children[lastChild.children.length - 1]\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      if (this.index < this.top.children.length && this.top.children[this.index].matchesHack()) {\n        this.index++\n      } else {\n        let dom = document.createElement(\"br\")\n        this.top.children.splice(this.index++, 0, new BRHackViewDesc(this.top, nothing, dom, null))\n        this.changed = true\n      }\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) → [ViewDesc]\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing\n// those for other nodes. Returns an array whose positions correspond\n// to node positions in the fragment, and whose elements are either\n// descs matched to the child at that index, or empty.\nfunction preMatch(frag, descs) {\n  let result = [], end = frag.childCount\n  for (let i = descs.length - 1; end > 0 && i >= 0; i--) {\n    let desc = descs[i], node = desc.node\n    if (!node) continue\n    if (node != frag.child(end - 1)) break\n    result[--end] = desc\n  }\n  return result\n}\n\n// : (ViewDesc, DecorationSet, (Decoration), (Node, [Decoration], DecorationSet, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort((a, b) => a.type.side - b.type.side)\n        widgets.forEach(onWidget)\n      } else {\n        onWidget(widget)\n      }\n    }\n\n    let child\n    if (restNode) {\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from == offset) active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n      }\n    }\n\n    onNode(child, active.length ? active.slice() : nothing, deco.forChild(offset, child), parentIndex - 1)\n    offset = end\n  }\n}\n\n// Pre-calculate and cache the set of custom view specs for a given\n// prop object.\nlet cachedCustomViews, cachedCustomFor\nfunction customNodeViews(view) {\n  if (cachedCustomFor == view._props) return cachedCustomViews\n  cachedCustomFor = view._props\n  return cachedCustomViews = buildCustomViews(view)\n}\nfunction buildCustomViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex} from \"./dom\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (node && NodeSelection.isSelectable(node) &&\n          (node.isAtom || (desc = view.docView.descAt($head.pos)) && !desc.contentDOM))\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      return false\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.anchorNode, offset = sel.anchorOffset\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        if (node.nodeType == 3 && node.nodeValue.charAt(offset - 1) == \"\\ufeff\") {\n          moveNode = node\n          moveOffset = --offset\n        } else break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSel(sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.anchorNode, offset = sel.anchorOffset, len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSel(sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSel(sel, node, offset) {\n  let range = document.createRange()\n  range.setEnd(node, offset)\n  range.setStart(node, offset)\n  sel.removeAllRanges()\n  sel.addRange(range)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let beyond = Selection.findFrom(dir < 0 ? $from : $to, dir)\n    return beyond ? apply(view, beyond) : true\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return selectVertically(view, 1) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n","import {EditorState} from \"prosemirror-state\"\nimport {Mapping} from \"prosemirror-transform\"\n\nclass TrackedRecord {\n  constructor(prev, mapping, state) {\n    this.prev = prev\n    this.mapping = mapping\n    this.state = state\n  }\n}\n\nexport class TrackMappings {\n  constructor(state) {\n    this.seen = [new TrackedRecord(null, null, state)]\n    // Kludge to listen to state changes globally in order to be able\n    // to find mappings from a given state to another.\n    EditorState.addApplyListener(this.track = this.track.bind(this))\n  }\n\n  destroy() {\n    EditorState.removeApplyListener(this.track)\n  }\n\n  find(state) {\n    for (let i = this.seen.length - 1; i >= 0; i--) {\n      let record = this.seen[i]\n      if (record.state == state) return record\n    }\n  }\n\n  track(old, tr, state) {\n    let found = this.seen.length < 200 ? this.find(old) : null\n    if (found)\n      this.seen.push(new TrackedRecord(found, tr.docChanged ? tr.mapping : null, state))\n  }\n\n  getMapping(state, appendTo) {\n    let found = this.find(state)\n    if (!found) return null\n    let mappings = []\n    for (let rec = found; rec; rec = rec.prev)\n      if (rec.mapping) mappings.push(rec.mapping)\n    let result = appendTo || new Mapping\n    for (let i = mappings.length - 1; i >= 0; i--)\n      result.appendMapping(mappings[i])\n    return result\n  }\n}\n","import {TextSelection, NodeSelection} from \"prosemirror-state\"\n\nimport browser from \"./browser\"\nimport {selectionCollapsed} from \"./dom\"\n\n// Track the state of the current editor selection. Keeps the editor\n// selection in sync with the DOM selection by polling for changes,\n// as there is no DOM event for DOM selection changes.\nexport class SelectionReader {\n  constructor(view) {\n    this.view = view\n\n    // Track the state of the DOM selection.\n    this.lastAnchorNode = this.lastHeadNode = this.lastAnchorOffset = this.lastHeadOffset = null\n    this.lastSelection = view.state.selection\n    this.ignoreUpdates = false\n    this.poller = poller(this)\n\n    view.dom.addEventListener(\"focus\", () => this.poller.start(hasFocusAndSelection(this.view)))\n    view.dom.addEventListener(\"blur\", () => this.poller.stop())\n\n    if (!view.editable) this.poller.start(false)\n  }\n\n  destroy() { this.poller.stop() }\n\n  poll(origin) { this.poller.poll(origin) }\n\n  editableChanged() {\n    if (!this.view.editable) this.poller.start()\n    else if (!hasFocusAndSelection(this.view)) this.poller.stop()\n  }\n\n  // : () → bool\n  // Whether the DOM selection has changed from the last known state.\n  domChanged() {\n    let sel = this.view.root.getSelection()\n    return sel.anchorNode != this.lastAnchorNode || sel.anchorOffset != this.lastAnchorOffset ||\n      sel.focusNode != this.lastHeadNode || sel.focusOffset != this.lastHeadOffset\n  }\n\n  // Store the current state of the DOM selection.\n  storeDOMState(selection) {\n    let sel = this.view.root.getSelection()\n    this.lastAnchorNode = sel.anchorNode; this.lastAnchorOffset = sel.anchorOffset\n    this.lastHeadNode = sel.focusNode; this.lastHeadOffset = sel.focusOffset\n    this.lastSelection = selection\n  }\n\n  clearDOMState() {\n    this.lastAnchorNode = this.lastSelection = null\n  }\n\n  // : (?string) → bool\n  // When the DOM selection changes in a notable manner, modify the\n  // current selection state to match.\n  readFromDOM(origin) {\n    if (this.ignoreUpdates || !this.domChanged() || !hasFocusAndSelection(this.view)) return\n    if (!this.view.inDOMChange) this.view.domObserver.flush()\n    if (this.view.inDOMChange) return\n\n    let domSel = this.view.root.getSelection(), doc = this.view.state.doc\n    let nearestDesc = this.view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc.size == 0\n    let head = this.view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n    let $head = doc.resolve(head), $anchor, selection\n    if (selectionCollapsed(domSel)) {\n      $anchor = $head\n      while (nearestDesc && !nearestDesc.node) nearestDesc = nearestDesc.parent\n      if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent) {\n        let pos = nearestDesc.posBefore\n        selection = new NodeSelection(head == pos ? $head : doc.resolve(pos))\n      }\n    } else {\n      $anchor = doc.resolve(this.view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset))\n    }\n\n    if (!selection) {\n      let bias = origin == \"pointer\" || (this.view.state.selection.head < $head.pos && !inWidget) ? 1 : -1\n      selection = selectionBetween(this.view, $anchor, $head, bias)\n    }\n    let preserve = !inWidget && !this.view.cursorWrapper && head == selection.head && $anchor.pos == selection.anchor\n    if (preserve) this.storeDOMState(selection)\n    if (!this.view.state.selection.eq(selection)) {\n      let tr = this.view.state.tr.setSelection(selection)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      this.view.dispatch(tr)\n    } else if (!preserve) {\n      selectionToDOM(this.view)\n    }\n  }\n}\n\n// There's two polling models. On browsers that support the\n// selectionchange event (everything except Firefox, basically), we\n// register a listener for that whenever the editor is focused.\nclass SelectionChangePoller {\n  constructor(reader) {\n    this.listening = false\n    this.curOrigin = null\n    this.originTime = 0\n    this.reader = reader\n\n    this.readFunc = () => reader.readFromDOM(this.originTime > Date.now() - 50 ? this.curOrigin : null)\n  }\n\n  poll(origin) {\n    this.curOrigin = origin\n    this.originTime = Date.now()\n  }\n\n  start(andRead) {\n    if (!this.listening) {\n      let doc = this.reader.view.dom.ownerDocument\n      doc.addEventListener(\"selectionchange\", this.readFunc)\n      this.listening = true\n      if (andRead) this.readFunc()\n    }\n  }\n\n  stop() {\n    if (this.listening) {\n      let doc = this.reader.view.dom.ownerDocument\n      doc.removeEventListener(\"selectionchange\", this.readFunc)\n      this.listening = false\n    }\n  }\n}\n\n// On Firefox, we use timeout-based polling.\nclass TimeoutPoller {\n  constructor(reader) {\n    // The timeout ID for the poller when active.\n    this.polling = null\n    this.reader = reader\n    this.pollFunc = this.doPoll.bind(this, null)\n  }\n\n  doPoll(origin) {\n    let view = this.reader.view\n    if (view.focused || !view.editable) {\n      this.reader.readFromDOM(origin)\n      this.polling = setTimeout(this.pollFunc, 100)\n    } else {\n      this.polling = null\n    }\n  }\n\n  poll(origin) {\n    clearTimeout(this.polling)\n    this.polling = setTimeout(origin ? this.doPoll.bind(this, origin) : this.pollFunc, 0)\n  }\n\n  start() {\n    if (this.polling == null) this.poll()\n  }\n\n  stop() {\n    clearTimeout(this.polling)\n    this.polling = null\n  }\n}\n\nfunction poller(reader) {\n  return new (\"onselectionchange\" in document ? SelectionChangePoller : TimeoutPoller)(reader)\n}\n\nexport function selectionToDOM(view, takeFocus) {\n  let sel = view.state.selection\n  syncNodeSelection(view, sel)\n\n  if (!view.hasFocus()) {\n    if (!takeFocus) return\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=921444\n    if (browser.gecko && view.editable) {\n      view.selectionReader.ignoreUpdates = true\n      view.dom.focus()\n      view.selectionReader.ignoreUpdates = false\n    }\n  }\n\n  let reader = view.selectionReader\n  if (reader.lastSelection && reader.lastSelection.eq(sel) && !reader.domChanged()) return\n\n  reader.ignoreUpdates = true\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view)\n  } else {\n    let {anchor, head} = sel, resetEditableFrom, resetEditableTo\n    if (browser.webkit && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        resetEditableFrom = temporarilyEditableNear(view, sel.from)\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        resetEditableTo = temporarilyEditableNear(view, sel.to)\n    }\n    view.docView.setSelection(anchor, head, view.root)\n    if (browser.webkit) {\n      if (resetEditableFrom) resetEditableFrom.contentEditable = \"false\"\n      if (resetEditableTo) resetEditableTo.contentEditable = \"false\"\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\")\n    } else if (anchor != head) {\n      view.dom.classList.add(\"ProseMirror-hideselection\")\n      if (\"onselectionchange\" in document) removeClassOnSelectionChange(view)\n    }\n  }\n\n  reader.storeDOMState(sel)\n  reader.ignoreUpdates = false\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nfunction temporarilyEditableNear(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos)\n  let after = offset < node.childNodes.length ? node.childNodes[offset] : null\n  let before = offset ? node.childNodes[offset - 1] : null\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) {\n      after.contentEditable = \"true\"\n      return after\n    } else if (before) {\n      before.contentEditable = \"true\"\n      return before\n    }\n  }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  let doc = view.dom.ownerDocument\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n  let domSel = view.root.getSelection()\n  let node = domSel.anchorNode, offset = domSel.anchorOffset\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = () => {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n      view.dom.classList.remove(\"ProseMirror-hideselection\")\n    }\n  })\n}\n\nfunction selectCursorWrapper(view) {\n  let domSel = view.root.getSelection(), range = document.createRange()\n  let node = view.cursorWrapper.type.widget\n  range.setEnd(node, node.childNodes.length)\n  range.collapse(false)\n  domSel.removeAllRanges()\n  domSel.addRange(range)\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!view.state.selection.visible && browser.ie && browser.ie_version <= 11) {\n    node.disabled = true\n    node.disabled = false\n  }\n}\n\nfunction syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    let desc = view.docView.descAt(sel.from)\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view)\n      if (desc) desc.selectNode()\n      view.lastSelectedViewDesc = desc\n    }\n  } else {\n    clearNodeSelection(view)\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    view.lastSelectedViewDesc.deselectNode()\n    view.lastSelectedViewDesc = null\n  }\n}\n\nexport function selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n    || TextSelection.between($anchor, $head, bias)\n}\n\nfunction hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) return false\n  let sel = view.root.getSelection()\n  if (!sel.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode)\n  } catch(_) {\n    return false\n  }\n}\n","import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\nimport {Mapping} from \"prosemirror-transform\"\n\nimport {TrackMappings} from \"./trackmappings\"\nimport {selectionBetween} from \"./selection\"\nimport {selectionCollapsed} from \"./dom\"\n\nexport class DOMChange {\n  constructor(view, composing) {\n    this.view = view\n    this.state = view.state\n    this.composing = composing\n    this.from = this.to = null\n    this.typeOver = false\n    this.timeout = composing ? null : setTimeout(() => this.finish(), DOMChange.commitTimeout)\n    this.trackMappings = new TrackMappings(view.state)\n\n    // If there have been changes since this DOM update started, we must\n    // map our start and end positions, as well as the new selection\n    // positions, through them. This tracks that mapping.\n    this.mapping = new Mapping\n    this.mappingTo = view.state\n  }\n\n  addRange(from, to) {\n    if (this.from == null) {\n      this.from = from\n      this.to = to\n    } else {\n      this.from = Math.min(from, this.from)\n      this.to = Math.max(to, this.to)\n    }\n  }\n\n  changedRange() {\n    if (this.from == null) return rangeAroundSelection(this.state.selection)\n    let $from = this.state.doc.resolve(Math.min(this.from, this.state.selection.from)), $to = this.state.doc.resolve(this.to)\n    let shared = $from.sharedDepth(this.to)\n    return {from: $from.before(shared + 1), to: $to.after(shared + 1)}\n  }\n\n  markDirty(range) {\n    if (this.from == null) this.view.docView.markDirty((range = range || this.changedRange()).from, range.to)\n    else this.view.docView.markDirty(this.from, this.to)\n  }\n\n  stateUpdated(state) {\n    if (this.trackMappings.getMapping(state, this.mapping)) {\n      this.trackMappings.destroy()\n      this.trackMappings = new TrackMappings(state)\n      this.mappingTo = state\n      return true\n    } else {\n      this.markDirty()\n      this.destroy()\n      return false\n    }\n  }\n\n  finish(force) {\n    clearTimeout(this.timeout)\n    if (this.composing && !force) return\n    this.view.domObserver.flush()\n    let range = this.changedRange()\n    this.markDirty(range)\n\n    this.destroy()\n    let sel = this.state.selection, allowTypeOver = this.typeOver && sel instanceof TextSelection &&\n        !sel.empty && sel.$head.sameParent(sel.$anchor)\n    readDOMChange(this.view, this.mapping, this.state, range, allowTypeOver)\n\n    // If the reading didn't result in a view update, force one by\n    // resetting the view to its current state.\n    if (this.view.docView.dirty) this.view.updateState(this.view.state)\n  }\n\n  destroy() {\n    clearTimeout(this.timeout)\n    this.trackMappings.destroy()\n    this.view.inDOMChange = null\n  }\n\n  compositionEnd() {\n    if (this.composing) {\n      this.composing = false\n      this.timeout = setTimeout(() => this.finish(), 50)\n    }\n  }\n\n  static start(view, composing) {\n    if (view.inDOMChange) {\n      if (composing) {\n        clearTimeout(view.inDOMChange.timeout)\n        view.inDOMChange.composing = true\n      }\n    } else {\n      view.inDOMChange = new DOMChange(view, composing)\n    }\n    return view.inDOMChange\n  }\n}\nDOMChange.commitTimeout = 20\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, oldState, range) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(range.from, range.to)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  let startDoc = oldState.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.spec.code ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) return desc.parseRule()\n  else if (dom.nodeName == \"BR\" && dom.parentNode && dom.parentNode.lastChild == dom) return {ignore: true}\n}\n\nfunction isAtEnd($pos, depth) {\n  for (let i = depth || 0; i < $pos.depth; i++)\n    if ($pos.index(i) + 1 < $pos.node(i).childCount) return false\n  return $pos.parentOffset == $pos.parent.content.size\n}\nfunction isAtStart($pos, depth) {\n  for (let i = depth || 0; i < $pos.depth; i++)\n    if ($pos.index(0) > 0) return false\n  return $pos.parentOffset == 0\n}\n\nfunction rangeAroundSelection(selection) {\n  // Intentionally uses $head/$anchor because those will correspond to the DOM selection\n  let $from = selection.$anchor.min(selection.$head), $to = selection.$anchor.max(selection.$head)\n\n  if ($from.sameParent($to) && $from.parent.inlineContent && $from.parentOffset && $to.parentOffset < $to.parent.content.size) {\n    let startOff = Math.max(0, $from.parentOffset)\n    let size = $from.parent.content.size\n    let endOff = Math.min(size, $to.parentOffset)\n\n    if (startOff > 0)\n      startOff = $from.parent.childBefore(startOff).offset\n    if (endOff < size) {\n      let after = $from.parent.childAfter(endOff)\n      endOff = after.offset + after.node.nodeSize\n    }\n    let nodeStart = $from.start()\n    return {from: nodeStart + startOff, to: nodeStart + endOff}\n  } else {\n    for (let depth = 0;; depth++) {\n      let fromStart = isAtStart($from, depth + 1), toEnd = isAtEnd($to, depth + 1)\n      if (fromStart || toEnd || $from.index(depth) != $to.index(depth) || $to.node(depth).isTextblock) {\n        let from = $from.before(depth + 1), to = $to.after(depth + 1)\n        if (fromStart && $from.index(depth) > 0)\n          from -= $from.node(depth).child($from.index(depth) - 1).nodeSize\n        if (toEnd && $to.index(depth) + 1 < $to.node(depth).childCount)\n          to += $to.node(depth).child($to.index(depth) + 1).nodeSize\n        return {from, to}\n      }\n    }\n  }\n}\n\nfunction keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n\nfunction readDOMChange(view, mapping, oldState, range, allowTypeOver) {\n  let parse = parseBetween(view, oldState, range)\n\n  let doc = oldState.doc, compare = doc.slice(parse.from, parse.to)\n  let change = findDiff(compare.content, parse.doc.content, parse.from, oldState.selection.from)\n\n  if (!change) {\n    if (allowTypeOver) {\n      let state = view.state, sel = state.selection\n      view.dispatch(state.tr.replaceSelectionWith(state.schema.text(state.doc.textBetween(sel.from, sel.to)), true).scrollIntoView())\n    } else if (parse.sel) {\n      let sel = resolveSelection(view, view.state.doc, mapping, parse.sel)\n      if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    }\n    return\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let nextSel\n  // If this looks like the effect of pressing Enter, just dispatch an\n  // Enter key instead.\n  if (!$from.sameParent($to) && $from.pos < parse.doc.content.size &&\n      (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n      nextSel.head == $to.pos &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n    return\n  // Same for backspace\n  if (oldState.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n    return\n\n  let from = mapping.map(change.start), to = mapping.map(change.endA, -1)\n\n  let tr, storedMarks, markChange, $from1\n  if ($from.sameParent($to) && $from.parent.inlineContent) {\n    if ($from.pos == $to.pos) { // Deletion\n      tr = view.state.tr.delete(from, to)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(from, to, markChange.mark)\n      else tr.removeMark(from, to, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, from, to, text))) return\n      tr = view.state.tr.insertText(text, from, to)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(from, to, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, mapping, parse.sel)\n    if (sel) tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, mapping, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(mapping.map(parsedSel.anchor)),\n                          doc.resolve(mapping.map(parsedSel.head)))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferedStart) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (endA < start && a.size < b.size) {\n    let move = preferedStart <= start && preferedStart >= endA ? start - preferedStart : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferedStart <= start && preferedStart >= endB ? start - preferedStart : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n","import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.type.hasRequiredAttrs() ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let wrap = document.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = document.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1) {\n    let singleNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 && !slice.content.firstChild.isText\n    firstChild.setAttribute(\"data-pm-context\", singleNode ? \"none\" : JSON.stringify(context))\n  }\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  if ((plainText || inCode || !html) && text) {\n    view.someProp(\"transformPastedText\", f => { text = f(text) })\n    if (inCode) return new Slice(Fragment.from(view.state.schema.text(text)), 0, 0)\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context))\n    if (parsed) {\n      slice = parsed\n    } else {\n      dom = document.createElement(\"div\")\n      text.trim().split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        dom.appendChild(document.createElement(\"p\")).textContent = block\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => html = f(html))\n    dom = readHTML(html)\n  }\n\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {preserveWhitespace: true, context: $context})\n  }\n  slice = closeIsolatingStart(slice)\n  let contextNode = dom && dom.querySelector(\"[data-pm-context]\")\n  let context = contextNode && contextNode.getAttribute(\"data-pm-context\")\n  if (context == \"none\")\n    slice = new Slice(slice.content, 0, 0)\n  else if (context)\n    slice = addContext(slice, context)\n  else // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = normalizeSiblings(slice, $context)\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(slice, $context) {\n  if (slice.content.childCount < 2) return slice\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    slice.content.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Slice.maxOpen(Fragment.from(result))\n  }\n  return slice\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {thead: [\"table\"], colgroup: [\"table\"], col: [\"table\", \"colgroup\"],\n                 tr: [\"table\", \"tbody\"], td: [\"table\", \"tbody\", \"tr\"], th: [\"table\", \"tbody\", \"tr\"]}\nlet detachedDoc = null\nfunction readHTML(html) {\n  let metas = /(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let doc = detachedDoc || (detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n  let elt = doc.createElement(\"div\")\n  let firstTag = /(?:<meta [^>]*>)*<([a-z][^>\\s]+)/i.exec(html), wrap, depth = 0\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()]) {\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n    depth = wrap.length\n  }\n  elt.innerHTML = html\n  for (let i = 0; i < depth; i++) elt = elt.firstChild\n  return elt\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n\nfunction closeIsolatingStart(slice) {\n  let closeTo = 0, frag = slice.content\n  for (let i = 1; i <= slice.openStart; i++) {\n    let node = frag.firstChild\n    if (node.type.spec.isolating) { closeTo = i; break }\n    frag = node.content\n  }\n\n  if (closeTo == 0) return slice\n  return new Slice(closeFragment(slice.content, closeTo, slice.openEnd), slice.openStart - closeTo, slice.openEnd)\n}\n\nfunction closeFragment(frag, n, openEnd) {\n  if (n == 0) return frag\n  let node = frag.firstChild\n  let content = closeFragment(node.content, n - 1, openEnd - 1)\n  let fill = node.contentMatchAt(0).fillBefore(node.content, openEnd <= 0)\n  return frag.replaceChild(0, node.copy(fill.append(content)))\n}\n","import browser from \"./browser\"\nimport {DOMChange} from \"./domchange\"\nimport {domIndex} from \"./dom\"\n\nconst observeOptions = {childList: true, characterData: true, attributes: true, subtree: true, characterDataOldValue: true}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nexport class DOMObserver {\n  constructor(view) {\n    this.view = view\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => this.registerMutations(mutations))\n    if (useCharData)\n      this.onCharData = e => this.registerMutation({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n  }\n\n  stop() {\n    if (this.observer) {\n      this.flush()\n      this.observer.disconnect()\n    }\n    if (useCharData)\n      this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n  }\n\n  flush() {\n    if (this.observer)\n      this.registerMutations(this.observer.takeRecords())\n  }\n\n  registerMutations(mutations) {\n    for (let i = 0; i < mutations.length; i++)\n      this.registerMutation(mutations[i])\n  }\n\n  registerMutation(mut) {\n    if (!this.view.editable) return\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\")) return\n    if (!desc || desc.ignoreMutation(mut)) return\n\n    let from, to\n    if (mut.type == \"childList\") {\n      let fromOffset = mut.previousSibling && mut.previousSibling.parentNode == mut.target\n          ? domIndex(mut.previousSibling) + 1 : 0\n      if (fromOffset == -1) return\n      from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = mut.nextSibling && mut.nextSibling.parentNode == mut.target\n          ? domIndex(mut.nextSibling) : mut.target.childNodes.length\n      if (toOffset == -1) return\n      to = desc.localPosFromDOM(mut.target, toOffset, 1)\n    } else if (mut.type == \"attributes\") {\n      from = desc.posAtStart - desc.border\n      to = desc.posAtEnd + desc.border\n    } else { // \"characterData\"\n      from = desc.posAtStart\n      to = desc.posAtEnd\n      // An event was generated for a text change that didn't change\n      // any text. Mark the dom change to fall back to assuming the\n      // selection was typed over with an identical value if it can't\n      // find another change.\n      if (mut.target.nodeValue == mut.oldValue) DOMChange.start(this.view).typeOver = true\n    }\n\n    DOMChange.start(this.view).addRange(from, to)\n  }\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {DOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween} from \"./selection\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.inDOMChange = null\n  view.domObserver = new DOMObserver(view)\n  view.domObserver.start()\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  ensureListeners(view)\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  if (view.inDOMChange) view.inDOMChange.destroy()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  if (event.keyCode == 16) view.shiftKey = true\n  if (view.inDOMChange) return\n  if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event))\n    event.preventDefault()\n  else\n    view.selectionReader.poll()\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (view.inDOMChange || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nlet lastClick = {time: 0, x: 0, y: 0}, oneButLastClick = lastClick\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside)\n}\n\nfunction defaultTripleClick(view, inside) {\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  if (!view.inDOMChange) return false\n  view.inDOMChange.finish(true)\n  return true\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type\n  if (now - lastClick.time >= 500 || !isNear(event, lastClick) || event[selectNodeModifier]) type = \"singleClick\"\n  else if (now - oneButLastClick.time >= 600 || !isNear(event, oneButLastClick)) type = \"doubleClick\"\n  else type = \"tripleClick\"\n  oneButLastClick = lastClick\n  lastClick = {time: now, x: event.clientX, y: event.clientY}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\")\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event))\n    event.preventDefault()\n  else\n    view.selectionReader.poll(\"pointer\")\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n    this.target = flushed ? null : event.target\n    if (targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        view.state.selection instanceof NodeSelection && targetPos == view.state.selection.from)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => this.target.setAttribute(\"contentEditable\", \"false\"), 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    view.selectionReader.poll(\"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = false\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    if (this.allowDefault) {\n      this.view.selectionReader.poll(\"pointer\")\n    } else if (handleSingleClick(this.view, this.pos.pos, this.pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (this.flushed) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(this.pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      this.view.selectionReader.poll(\"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    this.view.selectionReader.poll(\"pointer\")\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  view.selectionReader.poll(\"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\n// Input compositions are hard. Mostly because the events fired by\n// browsers are A) very unpredictable and inconsistent, and B) not\n// cancelable.\n//\n// ProseMirror has the problem that it must not update the DOM during\n// a composition, or the browser will cancel it. What it does is keep\n// long-running operations (delayed DOM updates) when a composition is\n// active.\n//\n// We _do not_ trust the information in the composition events which,\n// apart from being very uninformative to begin with, is often just\n// plain wrong. Instead, when a composition ends, we parse the dom\n// around the original selection, and derive an update from that.\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  DOMChange.start(view, true)\n}\n\neditHandlers.compositionend = (view, e) => {\n  if (!view.inDOMChange) {\n    // We received a compositionend without having seen any previous\n    // events for the composition. If there's data in the event\n    // object, we assume that it's a real change, and start a\n    // composition. Otherwise, we just ignore it.\n    if (e.data) DOMChange.start(view, true)\n    else return\n  }\n\n  view.inDOMChange.compositionEnd()\n}\n\neditHandlers.input = view => {\n  let change = DOMChange.start(view)\n  if (!change.composing) change.finish()\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  let doc = dom.ownerDocument\n  let wrap = doc.body.appendChild(doc.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = doc.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    doc.body.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\n// FIXME when Mobile Safari fixes this, change this to a version\n// range test\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) || browser.ios\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView())\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  let doc = view.dom.ownerDocument\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = doc.body.appendChild(doc.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    doc.body.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (!slice) return false\n\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice))) return true\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true))\n  return true\n}\n\neditHandlers.paste = (view, e) => {\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e))\n    e.preventDefault()\n  else\n    capturePaste(view, e)\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nfunction dropPos(slice, $pos) {\n  if (!slice || !slice.content.size) return $pos.pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let d = $pos.depth; d >= 0; d--) {\n    let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n    let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n    if ($pos.node(d).canReplace(insertPos, insertPos, content))\n      return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n  }\n  return $pos.pos\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= sel.to) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (!desc || !desc.node.type.spec.draggable || desc == view.docView) return\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(\"text/html\", dom.innerHTML)\n  e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  window.setTimeout(() => view.dragging = null, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let $mouse = view.state.doc.resolve(view.posAtCoords(eventCoords(e)).pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice ||\n      parseFromClipboard(view, e.dataTransfer.getData(\"text/plain\"), e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  if (!slice) return\n\n  e.preventDefault()\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice, dragging && dragging.move))) return\n  let insertPos = dropPos(slice, view.state.doc.resolve($mouse.pos))\n\n  let tr = view.state.tr\n  if (dragging && dragging.move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild))\n    tr.setSelection(new NodeSelection($pos))\n  else\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(tr.mapping.map(insertPos))))\n  view.focus()\n  view.dispatch(tr)\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.focused = true\n  }\n}\n\nhandlers.blur = view => {\n  if (view.focused) {\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.focused = false\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n","function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(widget, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n\n    if (!this.spec.raw) {\n      if (widget.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(widget)\n        widget = wrap\n      }\n      widget.contentEditable = false\n      widget.classList.add(\"ProseMirror-widget\")\n    }\n    this.widget = widget\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType && (this.widget == other.widget || this.spec.key) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from)\n    return offset == span.from && offset + node.child(index).nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other) {\n    return this.type.eq(other.type) && this.from == other.from && this.to == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, dom.Node, ?Object) → Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     stopEvent:: ?(event: dom.Event) → bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes.\n  static widget(pos, dom, spec) {\n    return new Decoration(pos, pos, new WidgetType(dom, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that positon. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// ::- A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // asssumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) → DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) → DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].type == span.type) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return false\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end == -1 || oldStart > end + oldOffset) continue\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1\n      } else if (dSize = (newEnd - newStart) - (oldEnd - oldStart)) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) { // Touched nodes\n    let from = mapping.map(children[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, children[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, newLocal ? moveSpans(newLocal, offset) : [], mapping, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, decorations, mapping, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, 0, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], children[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtractet from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper]))\n  return DecorationGroup.from(found)\n}\n","import {Mark} from \"prosemirror-model\"\nimport {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos, resetScrollPos} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners} from \"./input\"\nimport {SelectionReader, selectionToDOM} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    this.editable = getEditable(this)\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n    initInput(this) // Must be done before creating a SelectionReader\n\n    this.selectionReader = new SelectionReader(this)\n\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    this.updateState(props.state)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    let prev = this.state\n    this.state = state\n    if (prev.plugins != state.plugins) ensureListeners(this)\n\n    this.domObserver.flush()\n    if (this.inDOMChange && this.inDOMChange.stateUpdated(state)) return\n\n    let prevEditable = this.editable\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = prev.config != state.config ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    let updateSel = updateDoc || !state.selection.eq(prev.selection) || this.selectionReader.domChanged()\n    let oldScrollPos = scroll == \"preserve\" && updateSel && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      if (updateDoc) {\n        if (!this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        this.selectionReader.clearDOMState()\n      }\n      selectionToDOM(this)\n      this.domObserver.start()\n    }\n\n    if (prevEditable != this.editable) this.selectionReader.editableChanged()\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect())\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head))\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    let plugins = this.state.plugins\n    if (!prevState || prevState.plugins != plugins) {\n      this.destroyPluginViews()\n      for (let i = 0; i < plugins.length; i++) {\n        let plugin = plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) → *) → *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins (in order), and calls `f` every time a\n  // non-undefined value is found. When `f` returns a truthy value,\n  // that is immediately returned. When `f` isn't provided, it is\n  // treated as the identity function (the prop value is returned\n  // directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () → bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    selectionToDOM(this, true)\n    this.domObserver.start()\n    if (this.editable) this.dom.focus()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host))\n        return this._root = search\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the visible editor. When an object\n  // is returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    let pos = posAtCoords(this, coords)\n    if (this.inDOMChange && pos) {\n      pos.pos = this.inDOMChange.mapping.map(pos)\n      if (pos.inside != -1) pos.inside = this.inDOMChange.mapping.map(pos.inside)\n    }\n    return pos\n  }\n\n  // :: (number) → {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position. `left`\n  // and `right` will be the same number, as this returns a flat\n  // cursor-ish rectangle.\n  coordsAtPos(pos) {\n    if (this.inDOMChange)\n      pos = this.inDOMChange.mapping.invert().map(pos)\n    return coordsAtPos(this, pos)\n  }\n\n  // :: (number) → {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. Note that you should **not** mutate the editor's\n  // internal DOM, only inspect it (and even that is usually not\n  // necessary).\n  domAtPos(pos) {\n    if (this.inDOMChange)\n      pos = this.inDOMChange.mapping.invert().map(pos)\n    return this.docView.domFromPos(pos)\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    this.selectionReader.destroy()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction(tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\" + (view.focused ? \" ProseMirror-focused\" : \"\")\n  attrs.contenteditable = String(view.editable)\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction nonInclusiveMark(mark) {\n  return mark.type.spec.inclusive === false\n}\n\nfunction cursorWrapperDOM(visible) {\n  let span = document.createElement(\"span\")\n  span.textContent = \"\\ufeff\" // zero-width non-breaking space\n  if (!visible) {\n    span.style.position = \"absolute\"\n    span.style.left = \"-100000px\"\n  }\n  return span\n}\n\nfunction updateCursorWrapper(view) {\n  let {$head, $anchor, visible} = view.state.selection\n  let $pos = $head.pos == $anchor.pos && (!visible || $head.parent.inlineContent) ? $head : null\n  if ($pos && (!visible ||\n               view.state.storedMarks ||\n               $pos.parent.content.length == 0 ||\n               $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.some(nonInclusiveMark))) {\n    // Needs a cursor wrapper\n    let marks = view.state.storedMarks || $pos.marks()\n    let spec = {isCursorWrapper: true, marks, raw: true, visible}\n    if (!view.cursorWrapper || !Mark.sameSet(view.cursorWrapper.spec.marks, marks) ||\n        view.cursorWrapper.type.widget.textContent != \"\\ufeff\" ||\n        view.cursorWrapper.spec.visible != visible)\n      view.cursorWrapper = Decoration.widget($pos.pos, cursorWrapperDOM(visible), spec)\n    else if (view.cursorWrapper.pos != $pos.pos)\n      view.cursorWrapper = Decoration.widget($pos.pos, view.cursorWrapper.type.widget, spec)\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.Event, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string) → string\n//   Transform pasted plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration]) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. `getPos` is a function\n//   that can be called to get the node's current position, which can\n//   be useful when creating transactions to update it.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSet\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?number\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?number\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply).\n"],"names":["const","let","browser","dom","pos","child","prototypeAccessors","this","desc","search","j","super","DOMSerializer","Fragment","result","name","i","Selection","TextSelection","NodeSelection","next","EditorState","Mapping","DOMParser","anchor","sel","move","Slice","d","p","span","from","prop","Mark"],"mappings":"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"}